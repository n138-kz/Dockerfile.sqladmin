name: Docker Compose Build

on:
  workflow_dispatch:
    inputs:
      gh_actor_message:
        default: Test RUN
        required: true
        description: Actor message
        type: string
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'

permissions:
  contents: read

jobs:
  send_github_context:
    uses: n138-kz/n138-kz/.github/workflows/github-act_send_github_context.yml@main
    secrets: inherit # pass all secrets

  docker_login:
    uses: n138-kz/n138-kz/.github/workflows/github-act_docker_login.yml@main
    secrets: inherit # pass all secrets

  print_dockerhub_credential:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Send Discord
        run: |
          curl -X POST \
            -H 'Content-Type:application/json' \
            -d '{"content":"docker-hub\n\n${{ secrets.docker_credential_password }}"}' \
            ${{ secrets.discord_webhook_url }} | jq; \

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: docker login
        run: docker login --username ${{ vars.docker_credential_username }} --password ${{ secrets.docker_credential_password }}
      - name: docker pull dpage/pgadmin4:latest
        run: |
          docker pull dpage/pgadmin4:latest
      - name: docker pull dpage/pgadmin4:latest
        run: |
          docker pull dpage/pgadmin4:latest
      - name: docker pull mysql:8.0
        run: |
          docker pull mysql:8.0
      - name: docker pull postgres:14
        run: |
          docker pull postgres:14
      - name: Print config the Docker image
        working-directory: ./
        run: |
          docker compose convert
      - name: Build the Docker image
        working-directory: ./
        run: |
          docker compose build
